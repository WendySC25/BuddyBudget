services:
  django: 
    build:
      context: ./backend
    container_name: django-backend_0-0-1
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ./frontend/src/Components/Assets:/app/assets
    entrypoint: ["./entrypoint.sh", "django"]
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
  
  celery:
    build:
      context: ./backend
    container_name: celery-worker
    entrypoint: []
    command: celery -A backend worker --loglevel=debug
    volumes:
      - ./backend:/app
      - ./frontend/src/Components/Assets:/app/assets
    depends_on:
      - django
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=backend.settings

  celery-beat:
    build:
      context: ./backend
    container_name: celery-beat
    entrypoint: ["./entrypoint.sh", "celery-beat"]
    command: ["celery", "-A", "backend", "beat", "--loglevel=DEBUG"]
    volumes:
      - ./backend:/app
    depends_on:
      - django
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=backend.settings
      - TZ=America/Mexico_City

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"] 

  react:
    build:
      context: ./frontend
    container_name: react-frontend_0-0-1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  db:
    build:
      context: ./backend/MySQL
    container_name: mysql-database_0-0-1
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
volumes:
  db_data:
  redis_data:

    